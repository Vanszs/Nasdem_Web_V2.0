generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  superadmin
  editor
  analyst
}

enum OrgLevel {
  dpd
  sayap
  dpc
  dprt
  kader
}

enum MemberStatus {
  active
  inactive
  suspended
}

enum PositionEnum {
  ketua
  sekretaris
  bendahara
  wakil
  anggota
}

enum RegionType {
  kabupaten
  kecamatan
  desa
}

enum GenderEnum {
  male
  female
}

enum ElectionType {
  dprd
}

model User {
  id        Int       @id @default(autoincrement())
  username  String
  email     String    @unique
  password  String
  role      UserRole
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  News      News[]
  Program   Program[]
  Gallery   Gallery[]
  Member    Member[]
}

model Party {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  abbreviation    String?
  logoUrl         String?
  Caleg           Caleg[]
  DprdPartyResult DprdPartyResult[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  subtitle    String?
  description String?
  iconUrl     String?
  Program     Program[]
}

model News {
  id           Int       @id @default(autoincrement())
  title        String
  content      String?
  publishDate  DateTime?
  thumbnailUrl String?
  userId       Int
  User         User      @relation(fields: [userId], references: [id])
}

model Program {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  startDate   DateTime?
  endDate     DateTime?
  categoryId  Int
  photoUrl    String?
  userId      Int
  Category    Category  @relation(fields: [categoryId], references: [id])
  User        User      @relation(fields: [userId], references: [id])
}

model Gallery {
  id         Int       @id @default(autoincrement())
  type       String
  url        String
  caption    String?
  uploadDate DateTime?
  userId     Int
  User       User      @relation(fields: [userId], references: [id])
}

model SayapType {
  id                 Int                  @id @default(autoincrement())
  name               String
  description        String?
  StrukturOrganisasi StrukturOrganisasi[]
}

model Region {
  id                 Int                  @id @default(autoincrement())
  name               String
  type               RegionType
  StrukturOrganisasi StrukturOrganisasi[]
}

model StrukturOrganisasi {
  id          Int          @id @default(autoincrement())
  level       OrgLevel
  position    PositionEnum
  sayapTypeId Int?
  regionId    Int?
  photoUrl    String?
  startDate   DateTime?
  endDate     DateTime?
  SayapType   SayapType?   @relation(fields: [sayapTypeId], references: [id])
  Region      Region?      @relation(fields: [regionId], references: [id])
  Member      Member[]
}

model Member {
  id                 Int                 @id @default(autoincrement())
  fullName           String
  email              String?
  phone              String?
  dateOfBirth        DateTime?
  address            String?
  bio                String?
  gender             GenderEnum?
  status             MemberStatus?
  userId             Int?
  strukturId         Int?
  photoUrl           String?
  joinDate           DateTime?
  endDate            DateTime?
  User               User?               @relation(fields: [userId], references: [id])
  StrukturOrganisasi StrukturOrganisasi? @relation(fields: [strukturId], references: [id])
}

model Caleg {
  id              Int               @id @default(autoincrement())
  fullName        String
  partyId         Int
  photoUrl        String?
  Party           Party             @relation(fields: [partyId], references: [id])
  DprdCalegResult DprdCalegResult[]
}

model Dapil {
  id                   Int                    @id @default(autoincrement())
  name                 String
  Kecamatan            Kecamatan[]
  DprdElectionAnalysis DprdElectionAnalysis[]
}

model Kecamatan {
  id                   Int                    @id @default(autoincrement())
  name                 String
  dapilId              Int
  Dapil                Dapil                  @relation(fields: [dapilId], references: [id])
  Desa                 Desa[]
  DprdElectionAnalysis DprdElectionAnalysis[]
}

model Desa {
  id                   Int                    @id @default(autoincrement())
  name                 String
  kecamatanId          Int
  Kecamatan            Kecamatan              @relation(fields: [kecamatanId], references: [id])
  Tps                  Tps[]
  DprdElectionAnalysis DprdElectionAnalysis[]
}

model Tps {
  id                   Int                    @id @default(autoincrement())
  number               String
  desaId               Int
  Desa                 Desa                   @relation(fields: [desaId], references: [id])
  DprdElectionAnalysis DprdElectionAnalysis[]
}

model DprdElectionAnalysis {
  id              Int               @id @default(autoincrement())
  year            Int
  dapilId         Int
  kecamatanId     Int
  desaId          Int
  tpsId           Int
  totalValidVotes Int?
  invalidVotes    Int?
  dpt             Int?
  dptb            Int?
  dpk             Int?
  totalVotes      Int?
  turnoutPercent  Float?
  notes           String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime?
  Dapil           Dapil             @relation(fields: [dapilId], references: [id])
  Kecamatan       Kecamatan         @relation(fields: [kecamatanId], references: [id])
  Desa            Desa              @relation(fields: [desaId], references: [id])
  Tps             Tps               @relation(fields: [tpsId], references: [id])
  DprdPartyResult DprdPartyResult[]
  DprdCalegResult DprdCalegResult[]
}

model DprdPartyResult {
  id                   Int                  @id @default(autoincrement())
  electionAnalysisId   Int
  partyId              Int
  votes                Int?
  DprdElectionAnalysis DprdElectionAnalysis @relation(fields: [electionAnalysisId], references: [id])
  Party                Party                @relation(fields: [partyId], references: [id])
}

model DprdCalegResult {
  id                   Int                  @id @default(autoincrement())
  electionAnalysisId   Int
  calegId              Int
  votes                Int?
  DprdElectionAnalysis DprdElectionAnalysis @relation(fields: [electionAnalysisId], references: [id])
  Caleg                Caleg                @relation(fields: [calegId], references: [id])
}
